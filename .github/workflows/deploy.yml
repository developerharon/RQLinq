name: Deploy

on:
  workflow_dispatch:
    inputs:
      package_version:
        description: 'Package version'
        required: true
        default: '1.0.0'
        
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Pack
      run: dotnet pack ./RQLinq/RQLinq.csproj -p:PackageOutputPath=./artifacts --configuration Release -p:Version=${{ github.event.inputs.package_version }}
    - name: Upload package
      uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: RQLinq/artifacts
  
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.package_version }}
          name: Release ${{ github.event.inputs.package_version }}
          body: ${{ github.event.inputs.package_version }}
    
  github-publish:
    runs-on: ubuntu-latest
    needs: release
    name: Publish to GitHub
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Download package
        uses: actions/download-artifact@v1
        with:
          name: artifacts
          path: ./artifacts
      - name: Push package to GitHub
        run: dotnet nuget push ./artifacts**.nupkg --api-key ${{secrets.GITHUB_TOKEN}} --source "https://nuget.pkg.github.com/developerharon/index.json"

  nuget-publish:
    runs-on: ubuntu-latest
    needs: release
    name: Publish to Nuget
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Download package
        uses: actions/download-artifact@v1
        with:
          name: artifacts
          path: ./artifacts
      - name: Push package to Nuget
        run: dotnet nuget push ./artifacts**.nupkg --api-key ${{secrets.NUGET_KEY}} --source "https://api.nuget.org/v3/index.json"
  
